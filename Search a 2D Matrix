Intuition
Use nested B-Search. That's it!

Approach
In first B-Search, we find correct array to search. Then in second B-Search, we perform normal B-Search, return True if found, else return false.

Complexity
Time complexity:
O(log m + log n)

Space complexity:
O(1)

Code
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int n = matrix.length-1;
        int m = 0;
        int j = matrix[0].length-1;
        int k = 0;
        while(m<=n){
        int mid= m+(n-m)/2;
            if(matrix[mid][0]>target){
                n = mid-1;
            }
            else if(matrix[mid][0]==target){
                return true;
            }
            else{
                if(matrix[mid][j] == target){
                    return true;
                }
                else if(matrix[mid][j] < target){
                    m = mid+1;
                }
                else{
                    while(k<=j){
                        int dim = k + (j-k)/2;
                        if(matrix[mid][dim] < target){
                            k = dim+1;
                        }
                        else if(matrix[mid][dim] > target){
                            j = dim-1;
                        }
                        else return true;
                    }
                }
            }
        }
        return false;
    }
}

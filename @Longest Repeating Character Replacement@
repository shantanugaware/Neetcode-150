Intuition
First thought, WTF!
Second Thought, Should I switch my career.
Third thought, let's pretend its easy, and use sliding window. No luck with the logic. Then thought of using Map as well to maintain frequency of every character in given (Qualified) sliding window. Criteria for that window is (Window Size - MaxFrequencyOfCharacter <= K). If not, shrink the window size from left side.

Approach
Use array to maintain freq of characters in that particular window. As array is faster and lighter than map. Increase window size i.e. right++, if(Window Size - MaxFrequencyOfCharacter <= K). else decrease from left side, as left++.

Complexity
Time complexity:
O(n)

Space complexity:
O(1)

Code
class Solution {
    public int characterReplacement(String s, int k) {
        int[] arr = new int[26];
        int l=0;
        int maxF=0;
        int res=0;
        for(int r=0;r<s.length();r++){
            arr[s.charAt(r) - 'A']++;
            maxF = Math.max(maxF, arr[s.charAt(r)-'A']);
            while((r-l+1) - maxF > k){
                arr[s.charAt(l)-'A']--;
                l++;
            }
            res = Math.max(res, r-l+1);
        }
        return res;
    }
}
